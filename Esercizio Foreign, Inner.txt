ESERCIZIO Foreign Keys, INNER JOIN

Using the INGREDIENT and MEAL tables, write a query to return the name of all meals that contain garlic.
SELECT M.NAME
FROM MEAL M
INNER JOIN INGREDIENT I ON M.MEAL_ID = I.MEAL_ID
WHERE CONTAINS_GARTIC;

Using the INGREDIENT and MEAL tables, write a query to return the number of meals with vegetarian ingredients.
SELECT COUNT(DISTINCT M.id) AS vegetarian_meal_number
FROM MEAL M
INNER JOIN INGREDIENT I ON M.id = I.meal_id
WHERE I.vegetarian = 1;

Using the INGREDIENT and MEAL tables, write a query to return the names of meals that have at least 1 gluten free ingredient and at least 1 vegan ingredient.
SELECT DISTINCT M.name AS meal_name
FROM MEAL M
uso due inner join diversi, uno per gli ingredienti gluten free e uno per quelli vegani
INNER JOIN INGREDIENT I1 ON M.id = I1.meal_id
INNER JOIN INGREDIENT I2 ON M.id = I2.meal_id
WHERE I1.gluten_free = 1 AND I2.vegan = 1;

Using the INGREDIENT and MEAL tables, write a query to return the average number of ingredients per meal.
SELECT AVG(ingredient) AS average_number_ingredient
FROM (
  SELECT M.id, COUNT(I.id) AS ingredient_count
  FROM MEAL M
  INNER JOIN INGREDIENT I ON M.id = I.meal_id
  GROUP BY M.id
) AS count_ingredient;

Using the INGREDIENT and MEAL tables, write a query to return the names of meals that have more than 3 ingredients.
SELECT M.name AS meal_name
FROM MEAL M
INNER JOIN (
  SELECT meal_id, COUNT(*) AS num_ingredients
  FROM INGREDIENT
  GROUP BY meal_id
  HAVING COUNT(*) > 3
) AS ingredient_counts ON M.id = ingredient_counts.meal_id;


parte 6.
Using the following table definitions, write an inner join for the two tables
CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT,
    NAME VARCHAR(255),
    ADDRESS VARCHAR(255)
);
CREATE TABLE ORDER (
    ORDER_ID INT,
    CUSTOMER_ID INT,
    ORDER_DATE DATE,
    TOTAL_COST DECIMAL(10,2)
);

SELECT CUSTOMER.NAME, CUSTOMER.ADDRESS, "ORDER".ORDER_DATE, "ORDER".TOTAL_COST
FROM CUSTOMER 
INNER JOIN "ORDER" ON CUSTOMER.CUSTOMER_ID = "ORDER".CUSTOMER_ID;

PARTE 7.
Using the following table definitions, write an inner join for the two tables
CREATE TABLE PRODUCT (
    PRODUCT_ID INT,
    NAME VARCHAR(255),
    PRICE DECIMAL(10,2)
);
CREATE TABLE INVENTORY (
    PRODUCT_ID INT,
    STORE_ID INT,
    QUANTITY INT
);

SELECT P.NAME AS PRODUCT.NAME, P.PRICE AS PRODUCT.PRICE, I.STORE_ID, I.QUANTITY
FROM PRODUCT P
INNER JOIN INVENTORY I ON P.PRODUCT_ID=I.PRODUCT_ID;